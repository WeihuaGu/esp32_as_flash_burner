[1/10] Performing build step for 'bootloader'
[1/1] cd /home/happ/project/esp/esp32_as_flash_burner/build/bootloader/esp-idf/esptool_py && /home/happ/.espressif/python_env/idf5.4_py3.13_env/bin/python /home/happ/software/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /home/happ/project/esp/esp32_as_flash_burner/build/bootloader/bootloader.bin
Bootloader binary size 0x5160 bytes. 0x2ea0 bytes (36%) free.
[2/10] No install step for 'bootloader'
[3/10] Building C object esp-idf/bus_spi/CMakeFiles/__idf_bus_spi.dir/fram_base.c.obj
[4/10] Completed 'bootloader'
[5/10] Building C object esp-idf/bus_spi/CMakeFiles/__idf_bus_spi.dir/bus_spi.c.obj
[6/10] Linking C static library esp-idf/bus_spi/libbus_spi.a
[7/10] Generating ld/sections.ld
[8/10] Linking CXX executable esp32_as_flash_burner.elf
[9/10] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32c3 image...
Merged 1 ELF section
Successfully created esp32c3 image.
Generated /home/happ/project/esp/esp32_as_flash_burner/build/esp32_as_flash_burner.bin
[10/10] cd /home/happ/project/esp/esp32_as_flash_burner/build/esp-idf/esptool_py && /home/happ/.espressif/python_env/idf5.4_py3.13_env/bin/python /home/happ/software/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/happ/project/esp/esp32_as_flash_burner/build/partition_table/partition-table.bin /home/happ/project/esp/esp32_as_flash_burner/build/esp32_as_flash_burner.bin
esp32_as_flash_burner.bin binary size 0x33d30 bytes. Smallest app partition is 0x100000 bytes. 0xcc2d0 bytes (80%) free.
